fit = lm(log(mammalsleep$body) ~ log(mammalsleep$body))
fit = lm(log(mammalsleep$body) ~ log(mammalsleep$body))
plot(mammalsleep$brain,mammalsleep$body)
plot(log(mammalsleep$brain),log(mammalsleep$body))
fit = lm(log(mammalsleep$brain) ~ log(mammalsleep$body))
fit = lm(log(mammalsleep$brain) ~ log(mammalsleep$body))
fit
fit = lm(log(mammalsleep$body) ~log(mammalsleep$brain))
fit
fit = lm(log(mammalsleep$brain) ~ log(mammalsleep$body))
fit
predict(fit, mammalsleep$body = 227)
xpred = data.frame(mammalsleep$body = 227)
xpred = data.frame(mammalsleep$body = 227)
xpred = data.frame(body = 227, data = mammalsleep)
predict(fit, xpred, interval = "prediction")
xpred = data.frame(body = 227)
predict(fit, xpred, interval = "prediction")
fit = lm(log(brain) ~ log(body), data = mammalsleep)
fit
xpred = data.frame(body = 227)
predict(fit, xpred, interval = "prediction")
xpred = data.frame(body = log(227))
predict(fit, xpred, interval = "prediction")
xpred = data.frame(body = log(227))
predict(fit, xpred, interval = "prediction")
10^3.405896
exp(3.405896)
log(10)
exp(10)
log(e)
log(2.17)
log(2.71)
exp(3.405896)
plot(mammalsleep$brain,mammalsleep$body)
plot(log(mammalsleep$brain),log(mammalsleep$body))
fit = lm(log(brain) ~ log(body), data = mammalsleep)
fit
xpred = data.frame(body = log(227))
predict(fit, xpred, interval = "prediction")
predict(fit, xpred, interval = "prediction", data = mammalsleep)
xpred = data.frame(body = 227)
predict(fit, xpred, interval = "prediction", data = mammalsleep)
xpred = data.frame(body = log(227))
predict(fit, xpred, interval = "prediction", data = mammalsleep)
predict(fit, xpred, interval = "prediction", data = mammalsleep, level = 0.95)
exp(2.0058)
exp(3.405896)
exp(4.805992)
log(2.71)
plot(log(mammalsleep$brain),log(mammalsleep$body))
log(227)
plot(mammalsleep$brain,mammalsleep$body)
plot(mammalsleep$brain,mammalsleep$body)
plot(log(mammalsleep$brain),log(mammalsleep$body))
fit = lm(log(brain) ~ log(body), data = mammalsleep)
fit
xpred = data.frame(body = log(227))
predict(fit, xpred, interval = "prediction", data = mammalsleep, level = 0.95)
plot(mammalsleep$body,mammalsleep$brain)
plot(log(mammalsleep$body), log(mammalsleep$brain))
fit = lm(log(brain) ~ log(body), data = mammalsleep)
fit
xpred = data.frame(body = log(227))
predict(fit, xpred, interval = "prediction", data = mammalsleep, level = 0.95)
log(227)
plot(mammalsleep$body,mammalsleep$brain)
plot(log(mammalsleep$body), log(mammalsleep$brain))
predict(fit, data.frame(body = log(227)), interval = "prediction", data = mammalsleep, level = 0.95)
predict(fit, data.frame(body = 5.4, interval = "prediction", data = mammalsleep, level = 0.95)
predict(fit, xpred, interval = "prediction", data = mammalsleep, level = 0.95)
predict(fit, xpred, interval = "prediction", data = mammalsleep, level = 0.95)
fit
2.1348 + (0.7517*log(227))
exp(6.212735)
?predict
pr = predict(fit, xpred, interval = "prediction", data = mammalsleep, level = 0.95)
exp(pr)
pr = predict(fit, body = log(227), interval = "prediction", data = mammalsleep, level = 0.95)
pr
exp(pr)
xpred = data.frame(mammalsleep$body = log(227))
x = log(body)
y = log(brain)
fit1 = lm(y ~x)
fit1
fit
x = log(body)
y = log(brain)
fit1 = lm(y ~x)
fit1
xpred1 = data.frame(x= log(227))
pr1 = predict(fit1, xpred1, interval = "prediction", level = 0.95)
exp(pr1)
x=c(98.97844,100.2847,100.0799,101.26,93.4577,94.9636,101.5821,99.91295,99.6937,93.66568,99.44307,100.3962,95.72256,100.0216,102.0832)
y=c(9796.12,10057.46,10017.49,10253.21,8733.55,9017.41,10318.99,9984.44,9939.26,8772.32,9888.18,10079.73,9163.39,10002.49,10421.91)
fit = lm(y ~ x)
fit
plot(x,y)
library(MASS)
bc = boxcox(fit, plotit = T)
max(bc$y)
l = bc$x[which.max(bc$y)]
yy = ((y^l) - 1)/l
xx = ((x^l) - 1)/l
fit2 = lm(yy ~ x)
fit2
plot(x,yy)
yy = y^l#((y^l) - 1)/l
xx = ((x^l) - 1)/l
fit2 = lm(yy ~ x)
fit2
yy = y^0.5#((y^l) - 1)/l
xx = ((x^l) - 1)/l
fit2 = lm(yy ~ x)
fit2
pf(7.46, 3,16)
pf(4.026, 1,17)
pf(3.6,1,18)
df(3.6,1,18)
pf(5.368, 1, 17)
fit
anova(fit)
x
fit$residuals
sum(fit$residuals)
4345785/13
4345785/13/3
knitr::opts_chunk$set(echo = TRUE)
library(faraway)
data(uswages)
attach(uswages)
View(uswages)
y = uswages$wage
x1 = uswages$educ
x2 = uswages$exper
fit = lm(y ~ x1 + x2)
fit
fit2 = lm(log(y) ~ x1 + x2)
fit2
exp(0.01808)
knitr::opts_chunk$set(echo = TRUE)
#lpsa = prostate$lpsa
#lcavol = prostate$lcavol
#lweight = prostate$
fit = lm(lpsa~lcavol+lweight+age+lbph+svi+pgg45, data = prostate )
summary(fit)
fit2 = lm(lpsa~lcavol+lweight+age+lbph+svi , data = prostate)
summary(fit2)
ff = ((361-72)/5)/(72/19)
ff
pf(ff, 5, 19)
ff = ((361-72)/5)/(72/19)
pf(ff, 5, 19)
x1=c(2.95,2.88,2.75,3.01,2.79)
x2=c(3.41,3.35,3.25,3.46,3.28)
y=c(2.41,2.31,2.09,2.51,2.16)
lm(y~x1+x2+I(x1*x2)+I(x1^2)+I(x2^2)
lm(y~x1+x2+I(x1*x2)+I(x1^2)+I(x2^2))
((134- 72)/3) /(72/19)
ff2 = ((134- 72)/3) /(72/19)
pf(ff2, 3, 19)
teengamb(library faraway)
teengamb(faraway)
teengamb
plot(status, gamble, data = teengamb)
plot(status, gamble, data = teengamb)
plot(teengamb$status, teengamb$gamble)
lm(gambel~sex+income+sex*income, data = teengamb)
lm(gamble~sex+income+sex*income, data = teengamb)
fit1 = lm(gamble~sex+income+sex*income, data = teengamb)
fit1 = lm(gamble~sex+income+sex*income, data = teengamb)
fit2 = lm(gamble~sex+income+verbal+sex*income, data = teengamb)
fit3 = lm(gamble~sex+income+verbal+sex*income + sex*verbal, data = teengamb)
fit4 = lm(gamble~sex+income+verbal+status+sex*income + sex*verbal, data = teengamb)
summary(fit4)
anova(fit4, fit1)
anova(fit4, fit2)
anova(fit4, fit3)
anova(fit3, fit1)
fit = lm(Y ~ X1 + X2 + X3)
Y=c(55,65,90,40,75,60,100,80,45,95,50,70,65,85)
X1=c(8,8,4,9,5,7,3,5,8,3,9,6,6,4)
X2=c(700,1100,1600,400,1300,800,1500,1400,500,1700,600,900,1000,1800)
X3=c(13,17,18,10,19,11,23,20,14,24,12,15,16,21)
fit = lm(Y ~ X1 + X2 + X3)
anova(fit)
drop(fit)
drop(fit)
summary(fit)
anova(fit)
drop1(fit)
405.36-188.69
216.67/1
216.67/(405.36/12)
fit33 = lm(Y ~ X2 + X3)
anova(fit, fit3)
anova(fit, fit3)
Y=c(55,65,90,40,75,60,100,80,45,95,50,70,65,85)
X1=c(8,8,4,9,5,7,3,5,8,3,9,6,6,4)
X2=c(700,1100,1600,400,1300,800,1500,1400,500,1700,600,900,1000,1800)
X3=c(13,17,18,10,19,11,23,20,14,24,12,15,16,21)
fit = lm(Y ~ X1 + X2 + X3)
anova(fit)
#drop(fit)
summary(fit)
#fit11 = lm(Y ~ 1)
#fit22 = lm(Y ~ X1)
#drop1(fit)
fit33 = lm(Y ~ X2 + X3)
anova(fit, fit3)
anova(fit, fit3)
(fit, fit33)
anova(fit, fit33)
fit44 = lm(Y ~ X1 + X3)
anova(fit, fit44)
summary(fit)
pr1 = predict(fit1, xpred1, interval = "prediction", level = 0.95)
9*17/38
47-25
22/2
11*16/25
pf(7.04, 2, 16)
((361-72)/5)/(72/19)
y = uswages$wage
x1 = uswages$educ
x2 = uswages$exper
fit = lm(y ~ x1 + x2)
fit
fit2 = lm(log(y) ~ x1 + x2)
fit2
exp(0.01808)
exp(0.09051)
exp(fit2$coefficients[2])
lm(y~x1+x2+I(x1*x2)+I(x1^2)+I(x2^2))
aic = function(n, sse, p) {
n + n *log(2*pi) + n *log(sse/n) + 2*p
}
aic(24, 361, 1)
aic(24, 72, 6)
aic(24, 361, 0)
aic(24, 72, 5)
x1=c(2.95,2.88,2.75,3.01,2.79)
x2=c(3.41,3.35,3.25,3.46,3.28)
y=c(2.41,2.31,2.09,2.51,2.16)
fit = lm(y ~ x1)
fit1 = lm(y ~ 1)
summary(fit)
summary(fit1)
anova(fit)
anova(fit1)
anova(fit)
anova(fit1)
anova(fit)
anova(fit)
anova(fit1)
((134-72)/3)/(72/18)
pf(5.166667, 3, 18)
((361-72)/5)/(72/18))
((361-72)/5)/(72/18)
pf(14.45, 5, 18)
lm(1 ~ (1/3)*f + (1/3)*b + (1/3)*h)
y = (5*mean(f) + 5*mean(b) + 5*mean(h))/15
f=c(2.95,2.88,2.75,3.01,2.79)
b=c(3.41,3.35,3.25,3.46,3.28)
h=c(2.41,2.31,2.09,2.51,2.16)
y = (5*mean(f) + 5*mean(b) + 5*mean(h))/15
mean(f)
var(f)
(SSB/2)/(SSW/12)
f=c(2.95,2.88,2.75,3.01,2.79)
b=c(3.41,3.35,3.25,3.46,3.28)
h=c(2.41,2.31,2.09,2.51,2.16)
y = (5*mean(f) + 5*mean(b) + 5*mean(h))/15
SSB = 5*(mean(f) - y)^2 + 5*(mean(b) - y)^2 + 5*(mean(h) - y)^2
SSW = 4*var(f) + 4*var(b) + 4*var(h)
(SSB/2)/(SSW/12)
ln(2)
aic(24, 361, 0)
aic(24, 72, 5)
aic(24, 361, 1)
aic(24, 72, 6)
72/361
1- (72/361)
rnorm(2,1)
dnorm(2,1)
?rnorm
options(scipen = 1, digits = 4, width = 80)
library(knitr)
opts_chunk$set(echo=FALSE,
cache=TRUE, autodep=TRUE, cache.comments=FALSE,
message=FALSE, warning=FALSE)
rn = rnorm(100, 2, 1)
rn
rn = rnorm(100, 2, 1)
#2
mu = mean(rn)
mu
cor(rn)
#1
rn = rnorm(100, 2, 1)
#2
mu = mean(rn)
#3
B = 200
n = 100
R = numeric(B)
for (b in 1:B) {
i = sample(1:n, size = n, replace = TRUE)
rn2 = rn[i]
R[b] <-mean(rn2)
}
sd(R)
sd(rn)
sd(rn)/10
#1
rn = rnorm(100, 2, 1)
#2
mu = mean(rn)
#3
B = 200
n = 100
R = numeric(B)
for (b in 1:B) {
i = sample(1:n, size = n, replace = TRUE)
rn2 = rn[i]
R[b] <-mean(rn2)
}
sd(R)
#1
rn = rnorm(100, 2, 1)
#2
mu = mean(rn)
#3
B = 200
n = 100
R = numeric(B)
for (b in 1:B) {
i = sample(1:n, size = n, replace = TRUE)
rn2 = rn[i]
R[b] <-mean(rn2)
}
sd(R)
#1
rn = rnorm(100, 2, 1)
#2
mu = mean(rn)
#3
B = 200
n = 100
R = numeric(B)
for (b in 1:B) {
i = sample(1:n, size = n, replace = TRUE)
rn2 = rn[i]
R[b] <-mean(rn2)
}
sd(R)
knitr::opts_chunk$set(echo = TRUE)
Wheat = c(5.2,4.5,6.0,6.1,6.7,5.7)
Barley = c(6.5,8.0,6.1,7.5,5.9,5.6)
Maize = c(5.8,4.7,6.4,4.9,6.0,5.2)
Oats = c(8.3,6.1,7.8,7.0,5.6,7.2)
Grain <- c(rep("Wheat",6),rep("Barley",6),rep("Maize",6),rep("Oats",6))
Thiamin <- c(Wheat,Barley,Maize,Oats)
dat = as.data.frame(Thiamin,Grain)
dat
rep("Wheat",6)
Grain
Grain
pairwise.t.test(Thiamin,Grain,data=dat, p.adj = "bonf", pool.sd = T)
aovfit=aov(Thiamin~Grain,data=dat)
TukeyHSD(aovfit)$Grain
qt
?qt
qt(0.95)
qt(0.95, df = 6)
qt(0.95, df = 5)
qf(0.95, df = 5)
qf
?qf
qf(0.95, 4-1, 6-4)
qf(0.95, 3, 2)
tval = qt(0.95, df = 2)
fval = qf(0.95, 4-1, 6-4)
tval
knitr::opts_chunk$set(echo = TRUE)
array = c("mmm", "aapl")
data1 = c()
for (i in 1:len(array)) {
data.append(read.table("../Stocks/" + array[i], sep=",", header=TRUE))
}
array = c("mmm", "aapl")
data1 = c()
for (i in 1:length(array)) {
data.append(read.table("../Stocks/" + array[i], sep=",", header=TRUE))
}
array = c("mmm", "aapl")
data1 = c()
for (i in 1:length(array)) {
data1.append(read.table("../Stocks/" + array[i], sep=",", header=TRUE))
}
array = c("mmm", "aapl")
data1 = c(length = length(array))
for (i in 1:length(array)) {
data1.append(read.table("../Stocks/" + array[i], sep=",", header=TRUE))
}
array = c("mmm", "aapl")
data1 = c(length = length(array))
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/" + array[i], sep=",", header=TRUE)
}
array = c("mmm", "aapl")
data1 = c(length = length(array))
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/mmm", sep=",", header=TRUE)
}
array = c("mmm", "aapl")
data1 = c(length = length(array))
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
}
data1
array = c("mmm", "aapl")
data1 = c(length = length(array))
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
}
data1
data1
array = c("mmm", "aapl")
data1 = c(0, 0)
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
}
data1
array = c("mmm", "aapl")
data1 = array(data = NA, dim  = 2)
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
}
data1
read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE) -> hhh
array = c("mmm", "aapl")
data1 = array(data = NA, dim  = 2)
for (i in 1:length(array)) {
data1[i] = read.table("../Stocks/mmu.us.txt", sep=",", header=TRUE)
}
data1
read.table("../Stocks/mmu.us.txt", sep=",", header=TRUE) -> hello
hello = read.table("../Stocks/mmu.us.txt", sep=",", header=TRUE)
read.table("../Stocks/mmu.us.txt", sep=",", header=TRUE)
cd stat428
setwd(stat428)
setwd("stat428")
setwd("Project/Market_Analysis/")
ls
read.table("../Stocks/mmu.us.txt", sep=",", header=TRUE) -> hello
h = array()
h[1]
read.table("../Stocks/mmu.us.txt", sep=",", header=TRUE) -> h[1]
h[1]
df = data.frame
?data.frame
hello
h1
hello
h1 = c(hello, hello)
h1
h1[0]
h1[1]
View(h1[1])
matrix(2,2,2)
matrix(2,2,2,2)
?matrix
hello
hh = list(hello, hello)
hh[1]
hh1 = list(dim = 2)
hh1[1] = hello
hh1
hh1
hh2 = list()
hh2.append(hello)
?list()
hh2 = list(dim = 2)
hh2
hh2 = list()
hh2
hh2[[1]] <- hello
hh2
hh2[[1]]
hh2[[2]] <- hello
hh2
hh2[[1]]
mmm = read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
mmm[3] <- NULL
mmm[3] <- NULL
mmm[4] <- NULL
mmm[4] <- NULL
mmm
mmm$Return <- (mmm$Open - mmm$Close)/mmm$Close
mmm_open <- mmm[which(mmm$Date == "2005-03-01"),]$Open
mmm_close <- mmm[which(mmm$Date == "2005-04-01"),]$Close
mmm_2005 <- (mmm_close-mmm_open)/mmm_close
array = c("mmm", "aapl")
#data1 = array(data = NA, dim  = 2)
stocks = list()
for (i in 1:length(array)) {
stocks[[i]] = read.table("../Stocks/mmm.us.txt", sep=",", header=TRUE)
}
stocks[[1]]
